package parser

import (
	"bufio"
	"encoding/csv"
	"fmt"
	"strings"
)

// SBTLicenseReport parses the CSV files generated by
// https://github.com/sbt/sbt-license-report
type SBTLicenseReport struct {
}

// Parse parses the CSV file generated by the plugin into LicenseD format
func (sbt *SBTLicenseReport) Parse(scanner bufio.Scanner) ([]*Dependency, error) {
	var deps []*Dependency
	for scanner.Scan() {
		line := scanner.Text()
		dep, err := sbt.parseLine(line)
		if err == nil {
			deps = append(deps, dep)
		} else {
			fmt.Printf("%v\n", err)
		}
	}
	return deps, nil
}

// line -> recognised license, actual license (license url), group # name # version
func (sbt *SBTLicenseReport) parseLine(line string) (*Dependency, error) {
	reader := csv.NewReader(strings.NewReader(line))
	reader.TrimLeadingSpace = true
	reader.LazyQuotes = true
	row, err := reader.Read()
	if err != nil {
		return nil, err
	}
	moduleInfo := strings.Split(row[2], "#")
	group := strings.TrimSpace(moduleInfo[0])
	name := strings.TrimSpace(moduleInfo[1])
	version := strings.TrimSpace(moduleInfo[2])

	licenses := strings.Split(row[1], "(")
	licenseName := strings.TrimSpace(licenses[0])
	licenseURL := strings.TrimSpace(strings.Trim(licenses[1], ")"))

	license := &License{Name: licenseName, URL: licenseURL}
	dep := &Dependency{
		Name:     fmt.Sprintf("%s:%s", group, name),
		Version:  version,
		Licenses: []*License{license},
	}
	return dep, nil
}
